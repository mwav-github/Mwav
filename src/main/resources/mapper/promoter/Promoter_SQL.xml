<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- #은 ' ' string // $ 은 숫자 ' ' 없음 -->
<mapper namespace="promoter">

	<!--]]]\
<resultMap type="net.admins.dao.StaffVO" id="StaffVO">
	  <id property="staff_id" column="staff_id" />
	  <result column="PmtLoginId" property="PmtLoginId" />
	 <result column="PmtLoginPw" property="PmtLoginPw" />
	 <result column="PmtNumber" property="PmtNumber" />
	 <result column="PmtName" property="Pmt"Name />
	 <result column="PmtNickname" property="PmtNickname" />
	 <result column="PmtBranch" property="PmtBranch" />
	 <result column="PmtDeptName" property="PmtDeptName" />
	 <result column="PmtClass" property="PmtClass" />
	 <result column="PmtSubJobs" property="PmtSubJobs" />
	 <result column="PmtPhone" property="PmtPhone" />
	 <result column="PmtCellularP" property="PmtCellularP" />
	 <result column="PmtExtNbr" property="PmtExtNbr" />
	 <result column="PmtEmail" property="PmtEmail" />
	 <result column="PmtSsn1" property="PmtSsn1" />
	 <result column="PmtSsn2" property="PmtSsn2" />
	 <result column="PmtZipCode" property="PmtZipCode" />
	 <result column="PmtAddress" property="PmtAddress" />
	 <result column="PmtMessengerName" property="PmtMessengerName" />
	 <result column="PmtMessengerId" property="PmtMessengerId" />
	 <result column="PmtHomepage" property="PmtHomepage" />
	 <result column="PmtMark" property="PmtMark" />
	 <result column="PmtMark" property="PmtMark" />
	 <result column="PmtLevel" property="PmtLevel" />
	 <result column="PmtBusinessPic" property="Pmt" />
	 <result column="Pmt" property="Pmt" />
	 <result column="Pmt" property="Pmt" />
	 <result column="Pmt" property="Pmt" />
	 <result column="Pmt" property="Pmt" />
 </resultMap> -->





	<insert id="insertPmtForm" parameterType="net.promoter.vo.Promoter_VO">
		<![CDATA[
			INSERT INTO Promoter_tbl(promoter_id, pmtLoginId, pmtLoginPw, pmtGender, pmtFirstName, pmtLastName, pmtMail, pmtPhone, pmtCellularPhone)
			VALUES(#{promoter_id}, #{pmtLoginId}, #{pmtLoginPw}, '-99', #{pmtName}, #{pmtName}, #{pmtMail}, #{pmtPhone}, #{pmtCellularPhone})
		]]>
	</insert>

	<insert id="insertPmtValueForm" parameterType="net.promoter.vo.Promoter_VO">
		<![CDATA[
			INSERT INTO PromoterValue_tbl (promoter_id, Promoter_tbl_promoter_id)
			VALUES(#{promoter_id}, #{promoter_id})
		]]>
	</insert>

	<!--/*========================================리스트(SelctOne, SelectList 순)========================================*/  -->

	<select id="selectNextPmtPk" resultType="int">
		<![CDATA[
	       select IFNULL(max(promoter_id+1) , 10001000) AS promoter_id from Promoter_tbl
		]]>
	</select>

	<select id="selectOnePmtLoginIdCheck" parameterType="string" resultType="string">
		<![CDATA[
	      select pmtLoginId from Promoter_tbl where PmtLoginId = #{pmtLoginId};
		]]>
	</select>


	<select id="selectOneGetTotalCount" resultType="int">
	<![CDATA[
	   select count(*) from Promoter_tbl
	]]>
	</select>

	<select id="selectOnePmtInfo" parameterType="hashmap" resultType="net.promoter.vo.Promoter_VO">
		<![CDATA[
		SELECT *
		FROM Promoter_tbl
	    WHERE promoter_id = #{promoter_id}
		]]>
	</select>

	<select id="selectOnePmtValueInfo" parameterType="string" resultType="net.promoter.vo.PromoterValue_VO">
		<![CDATA[
		SELECT *
		FROM PromoterValue_tbl
	    WHERE promoter_id = #{promoter_id}
		]]>
	</select>

	<select id="selectListPmtList" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
	select c.* from (select @ROWNUM := @ROWNUM + 1 AS ROWNUM, a.* from (select * from Promoter_tbl order by promoter_id) a,  (SELECT @ROWNUM := 0) R ) c where c.ROWNUM >= #{startRow} and c.ROWNUM <= #{endRow}
	]]>
	</select>


	<!-- /*========================================보기========================================*/ -->
	<select id="selectPmtView" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
	      select * from Staff_tbl where staff_id= #{staff_id}
		]]>
	</select>


	<!-- <select id="selectPmtLogin" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
		SELECT *
		FROM Staff_tbl
	    WHERE PmtLoginId = #{PmtLoginId}
		]]>
	</select> -->

	<select id="selectPmtLogin" parameterType="hashmap" resultType="net.promoter.vo.Promoter_VO">
		<![CDATA[
		SELECT *
		FROM Promoter_tbl
	    WHERE pmtLoginId = #{pmtLoginId}
		]]>
	</select>
<!-- /*========================================업데이트========================================*/ -->
	<update id="updatePmtPro" parameterType="hashmap">
	<![CDATA[
	  update Promoter_tbl
	  set pmtFirstName=#{pmtName} ,pmtCellularPhone= #{pmtCellularPhone},pmtMail=#{pmtMail},pmtPhone=#{pmtPhone}, pmtMark= #{pmtMaikl}
	]]>
	  <if test= "#{pmtNewPw}!=null">
	       , pmtLoginPw = #{pmtNewPw}
	  </if>
	  where promoter_id= #{promoter_id}

	</update>

	<update id="updatePmtValuePro" parameterType="hashmap">
	<![CDATA[
	  update PromoterValue_tbl
	  set
	  where promoter_id= #{promoter_id}
	]]>
	</update>

	<update id="updatePmtVisitNbr" parameterType="hashmap">
	<![CDATA[
	  update PromoterValue_tbl
	  set PmtVisitNbr = PmtVisitNbr+1
	  where promoter_id= #{promoter_id}
	]]>
	</update>
	
	<select id="checkSocialLogin" parameterType = "net.bizLogin.promoter.vo.PmtFacilitatorSO" resultType="net.bizLogin.promoter.vo.PmtFacilitatorVO">
		SELECT snsPromoter_id
			 , spPromoterId
		     , spFirstName
		     , spLastName
		     , spMiddleName
		     , spNickname
		     , spEmail
		     , spGender
		     , spProfileImage
		     , spURL
		     , promoter_id
		 FROM SnsPromoter_tbl
		WHERE 1=1
		AND spPromoterId = #{spPromoterId}
	</select>
	
	<insert id="joinSocialLogin" parameterType="net.bizLogin.promoter.vo.PmtFacilitatorSO">
		INSERT INTO SnsPromoter_tbl
		VALUES (
				  (SELECT snsPromoter_id FROM (SELECT IFNULL(MAX(snsPromoter_id) + 1, 10000) snsPromoter_id FROM SnsPromoter_tbl) tb)
				, #{spPromoterId}
				, #{spSnsType}
				, #{spFirstName}
				, #{spLastName}
				, #{spMiddleName}
				, #{spNickName}
				, #{spEmail}
				, #{spGender}
				, #{spProfileImage}
				, #{spURL}
				<choose>
					<when test="isEmailVerified == 'true' or isEmailVerified == 'Y'">
					, NOW()
					</when>
					<otherwise>
					, NULL
					</otherwise>
				</choose>
<!-- 				, #{spCertifyMailDt} -->
				, #{promoter_id}
				, NOW()
				, #{spUpdateDt}
				, #{spDeleteDt}
				, #{spIpAddress}
				)
	</insert>



	<!-- <insert id="insertPmtRegist" parameterType="hashmap" >
		insert into staff_tbl value(#{staff_id},#{PmtLoginId},#{PmtLoginPw},#{PmtNumber},#{PmtName},
		#{PmtNickname},#{PmtBranch},#{PmtDeptName},#{PmtClass},#{PmtSubJobs},#{PmtPhone},#{PmtCellularP}
		,#{PmtExtNbr},#{sftExtNbr},#{PmtEmail},#{sftSsn1},#{sftSsn2},#{sftZipcode},#{sftAddress},#{sftMessengerName}
		,#{sftMessengerId},#{sftHomepage},#{sftMark},#{sftLevel},#{sftBusinessPic},#{sftAvataImage},#{sftData},#{sftPointAc}
		,#{sftJoinDt},#{sftDeleteDt},#{sftInserDt},#{sftUpdateDt},#{sftRecentLoginDt},#{sftIpAddress}
		)
	</insert> -->

	<select id="selectChkPmtCertifyDtYN" parameterType="string" resultType="string">
		<![CDATA[
		SELECT CASE WHEN T2.pmtCertifyDt IS NOT NULL THEN 'Y'
					ELSE 'N'
					END	CertifyDtYN
		FROM Promoter_tbl T1
			JOIN PromoterValue_tbl T2
				ON T1.promoter_id = T2.promoter_id
		WHERE T1.pmtLoginId = #{promoter_id}
		]]>
	</select>

	<update id="updatePmtCertifyDt" parameterType="string">
		<![CDATA[
		UPDATE PromoterValue_tbl SET pmtCertifyDt = NOW()
		WHERE promoter_id = (SELECT promoter_id FROM Promoter_tbl WHERE pmtLoginId = #{promoter_id})
		]]>
	</update>
</mapper>

